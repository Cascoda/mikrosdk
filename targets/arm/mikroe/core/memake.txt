type: library
target: lib_hal_ll_core

#begin python
hal_ll_core_def_list = []
if MEMAKE_MCU_NAME[0:5] == "STM32":
    chip_vendor = "stm32"
    hal_ll_core_def_list.append(chip_vendor)
    hal_ll_core_def_list.append(MEMAKE_MCU_NAME[:7]  + "xx")
    if MEMAKE_MCU_NAME[6] == "0":
        hal_ll_core_source = "m0"
        hal_ll_core_def_list.append("__cortex_m0__")
    elif MEMAKE_MCU_NAME[6] == "1" or MEMAKE_MCU_NAME[6] == "2":
        hal_ll_core_source = "m3"
        hal_ll_core_def_list.append("__cortex_m3__")
    elif MEMAKE_MCU_NAME[6] == "3" or MEMAKE_MCU_NAME[6] == "4":
        hal_ll_core_source = "m4"
        hal_ll_core_def_list.append("__cortex_m4__")
    elif MEMAKE_MCU_NAME[6] == "7":
        hal_ll_core_source = "m7"
        hal_ll_core_def_list.append("__cortex_m7__")
    else:
        hal_ll_def_list.append("__cortex_not_supported__")
elif MEMAKE_MCU_NAME[0:2] == "MK":
    chip_vendor = "nxp"
    hal_ll_core_def_list.append(chip_vendor)
    if MEMAKE_CORE_NAME == "M4EF" or MEMAKE_CORE_NAME == "M4DSP":
        hal_ll_core_source = "m4"
        hal_ll_core_def_list.append("__cortex_m4__")
    elif MEMAKE_CORE_NAME == "M7":
        hal_ll_core_source = "m7"
        hal_ll_core_def_list.append("__cortex_m7__")
    else:
        hal_ll_def_list.append("__cortex_not_supported__")
elif MEMAKE_MCU_NAME[0:4] == "TM4C":    ## TODO Add TIVA chips. Not supported at the moment.
    hal_ll_def_list.append("tiva")
    hal_ll_def_list.append("__vendor_not_supported__")
else:
    hal_ll_def_list.append("__vendor_not_supported__")
#end python

defines: {
    <['\r\n'.join(hal_ll_core_def_list)]>
}

depends: {
    MikroC.Core
    MikroSDK.HalLowLevelCommon
}

sources: {
    ./src/hal_ll_core.c
    ./src/<[chip_vendor]>/<[hal_ll_core_source]>/hal_ll_core_port.c
}

headers: {
    ./include/hal_ll_core_defines.h
    ./include/hal_ll_core_port.h
    ./include/hal_ll_core.h
}

include: {
    ./include
}

expInclude: {
    ./include
}

alias: MikroSDK.HalLowLevelCore

type: library
target: lib_hal_ll_gpio

#begin python  # tiva specific
hal_ll_def_list = []
if MEMAKE_CORE_NAME == "M4EF":
    hal_ll_def_list.append("__cortex_m4_fpu__")
else:
    hal_ll_def_list.append("__cortex_not_supported__")

hal_ll_def_list.append(MEMAKE_MCU_NAME)
hal_ll_def_list.append(MEMAKE_MCU_NAME[:7])

mcu_header_path = MEMAKE_MCU_NAME

## BEGIN GPIO
gpio_subimplementation = "implementation_1/hal_ll_gpio_port.c"
## END GPIO
#end python

defines: {
    <['\r\n'.join(hal_ll_def_list)]>
}

depends: {
    MikroC.Core
    MikroSDK.HalLowLevelCore
    MikroSDK.HalLowLevelCommon
}

::  TODO -- uncomment as implemented
sources: {
::  BEGIN GPIO
    hal_ll_gpio.c
    <[gpio_subimplementation]>
::  END GPIO
}

::  TODO -- uncomment as implemented
headers: {
    ../../include/hal_ll_rcc.h
    ../../include/hal_ll_target.h
::  BEGIN GPIO
    ../../include/gpio/hal_ll_gpio.h
    ../../include/gpio/hal_ll_gpio_port.h
    ../../include/gpio/hal_ll_gpio_constants.h
::  END GPIO
}

::  TODO -- uncomment as implemented
include: {
    ../../include
::  BEGIN GPIO
    ../../include/gpio
::  END GPIO
}

expInclude: {
    ./include/<[mcu_header_path.lower()]>
    ./include/hal_ll_port
}

install: {
    src(../../include/gpio/hal_ll_gpio.h) dst(include/hal_ll_port/hal_ll_gpio.h)
    src(../../include/gpio/hal_ll_gpio_constants.h) dst(include/hal_ll_port/hal_ll_gpio_constants.h)
    src(../../include/gpio/hal_ll_gpio_port.h) dst(include/hal_ll_port/hal_ll_gpio_port.h)
}

alias: MikroSDK.HalLowLevel.GPIO

type: library
target: lib_hal_ll_i2c_master

#begin python  # tiva specific
hal_ll_def_list = []
if MEMAKE_CORE_NAME == "M4EF":
    hal_ll_def_list.append("__cortex_m4_fpu__")
else:
    hal_ll_def_list.append("__cortex_not_supported__")

hal_ll_def_list.append(MEMAKE_MCU_NAME)

mcu_header_path = MEMAKE_MCU_NAME

## BEGIN I2C
hal_ll_def_list.append("MACRO_USAGE_I2C")
i2c_subimplementation = "implementation_1/hal_ll_i2c_master.c"
i2c_pin_map = "hal_ll_i2c_pin_map/implementation_1"
## END I2C

## TSC2003 Special case
try:
    MSDK_TFT_TP
except NameError:
    hal_ll_def_list.append("__TFT_NON_TSC2003__")
else:
    if( MSDK_TFT_TP == "__TP_TSC2003__" ):
        hal_ll_def_list.append("__TFT_RESISTIVE_TSC2003__")
    else:
        hal_ll_def_list.append("__TFT_NON_TSC2003__")
#end python

defines: {
    <['\r\n'.join(hal_ll_def_list)]>
}

depends: {
    MikroC.Core
    MikroSDK.HalLowLevelCore
    MikroSDK.HalLowLevelCommon
}

::  TODO -- uncomment as implemented
sources: {
::  BEGIN I2C
    <[i2c_subimplementation]>
::  END I2C
}

::  TODO -- uncomment as implemented
headers: {
    ../../include/hal_ll_rcc.h
    ../../include/hal_ll_target.h
::  BEGIN I2C
    ../../include/i2c/hal_ll_i2c_master.h
    ../../include/i2c/<[i2c_pin_map]>/hal_ll_i2c_pin_map.h
::  END I2C
}

::  TODO -- uncomment as implemented
include: {
    ../../include
    ../../include/gpio
::  BEGIN I2C
    ../../include/i2c
    ../../include/i2c/<[i2c_pin_map]>
::  END I2C
}

expInclude: {
    ./include/<[mcu_header_path.lower()]>
    ./include/hal_ll_port
}

install: {
    src(../../include/i2c/hal_ll_i2c_master.h) dst(include/hal_ll_port/hal_ll_i2c_master.h)
}

alias: MikroSDK.HalLowLevel.I2C.Master

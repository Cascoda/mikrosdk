type: library
target: lib_hal_ll_spi_master

#begin python  # tiva specific
hal_ll_def_list = []
if MEMAKE_CORE_NAME == "M4EF":
    hal_ll_def_list.append("__cortex_m4_fpu__")
else:
    hal_ll_def_list.append("__cortex_not_supported__")

hal_ll_def_list.append(MEMAKE_MCU_NAME)
hal_ll_def_list.append(MEMAKE_MCU_NAME[:7])

mcu_header_path = MEMAKE_MCU_NAME

## BEGIN SPI
spi_subimplementation = "implementation_1/hal_ll_spi_master.c"
spi_pin_map = "hal_ll_spi_master_pin_map/implementation_1"
## END SPI
#end python

defines: {
    <['\r\n'.join(hal_ll_def_list)]>
}

depends: {
    MikroC.Core
    MikroSDK.HalLowLevelCore
    MikroSDK.HalLowLevelCommon
}

sources: {
::  BEGIN SPI
    <[spi_subimplementation]>
::  END SPI
}

headers: {
    ../../include/hal_ll_rcc.h
    ../../include/hal_ll_target.h
::  BEGIN SPI
    ../../include/spi_master/hal_ll_spi_master.h
    ../../include/spi_master/<[spi_pin_map]>/hal_ll_spi_master_pin_map.h
::  END SPI
}

include: {
    ../../include
    ../../include/gpio
::  BEGIN SPI
    ../../include/spi_master
    ../../include/spi_master/<[spi_pin_map]>
::  END SPI
}

expInclude: {
    ./include/<[mcu_header_path.lower()]>
    ./include/hal_ll_port
}

install: {
    src(../../include/spi_master/hal_ll_spi_master.h) dst(include/hal_ll_port/hal_ll_spi_master.h)
}

alias: MikroSDK.HalLowLevel.SPI.Master

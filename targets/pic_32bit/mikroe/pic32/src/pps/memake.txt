type: library
target: lib_hal_ll_pps

#begin python  # pic32 specific
import re

hal_ll_def_list = []
if "PIC32" in MEMAKE_MCU_NAME:
    hal_ll_def_list.append("__pic32__")
    hal_ll_def_list.append(MEMAKE_MCU_NAME[:7] + "xx")
    hal_ll_def_list.append(MEMAKE_MCU_NAME[:8] + "xx")
    hal_ll_def_list.append(MEMAKE_MCU_NAME[:10] + "xx")
    hal_ll_def_list.append(MEMAKE_MCU_NAME[:-10] + "xx")
else:
    hal_ll_def_list.append("__family_not_supported__")

hal_ll_def_list.append(MEMAKE_MCU_NAME)

## BEGIN PPS
hal_ll_def_list.append("MACRO_USAGE_PPS")
if re.match("((^PIC32MX([12][0-9]{2}|330|350|370|430|450|470|530|550|570)F(512|256|128|064|032|016)[HLBCD]B?)$)", MEMAKE_MCU_NAME):
    hal_ll_def_list.append("HAL_LL_PPS_MX_ENABLE")
if( re.match("(^PIC32MX([12][0-9]{2}|330|350|370|430|450|470|530|550|570)F(512|256|128|064|032|016)[HL]B?$)",MEMAKE_MCU_NAME)):
    pps_connections_path = "HAL_LL_PPS_MX_64_100_PIN"
elif( re.match("(^PIC32MX[12](.+)[BCD]$)",MEMAKE_MCU_NAME)):
    pps_connections_path = "HAL_LL_PPS_MX"
elif( re.match("(^PIC32MZ(.+)EF(.+)$)",MEMAKE_MCU_NAME) ):
    pps_connections_path = "HAL_LL_PPS_MZ"
else:
    pps_connections_path = "HAL_LL_PPS_DEFAULT"

pps_implementation = "implementation_1"
## END PPS
## BEGIN PMD
if re.match("(^PIC32MX([12][0-9]{2}|330|350|370|430|450|470|530|550|570)F(512|256|128|064|032|016)[HLBCD]B?$|^PIC32MZ(0512|1024|2048)EF[FEHMGK](064|100|124|144)$)", MEMAKE_MCU_NAME):
    hal_ll_def_list.append("HAL_LL_PERIPHERAL_MODULE_DISABLE")
## END PMD
#end python

defines: {
    <['\r\n'.join(hal_ll_def_list)]>
}

depends: {
    MikroC.Core
    MikroSDK.HalLowLevelCore
    MikroSDK.HalLowLevelCommon
}

sources: {
::  BEGIN PPS
    ./hal_ll_pps.c
    ./<[pps_implementation]>/hal_ll_pps_port.c
::  END PPS
}

headers: {
    ../../include/hal_ll_target.h
    ../../include/hal_ll_slrcon_map.h
    ../../include/hal_ll_odcon_map.h
::  BEGIN PPS
    ../../include/pps/hal_ll_pps.h
    ../../include/pps/hal_ll_pps_port.h
    ../../include/pps/hal_ll_pps_defines.h
    ../../include/pps/hal_ll_pps_connection_defs/<[pps_connections_path]>/hal_ll_pps_connection_defs.h
::  END PPS
}

include: {
    ../../include
    ../../include/gpio
::  BEGIN PPS
    ../../include/pps
    ../../include/pps/hal_ll_pps_connection_defs
    ../../include/pps/hal_ll_pps_connection_defs/<[pps_connections_path]>
::  END PPS
}

expInclude: {
    ./include/<[MEMAKE_MCU_NAME.lower()]>
    ./include/hal_ll_port
}

install: {
    src(../../include/pps/hal_ll_pps.h) dst(./include/hal_ll_port/hal_ll_pps.h)
    src(../../include/pps/hal_ll_pps_port.h) dst(./include/hal_ll_port/hal_ll_pps_port.h)
    src(../../include/pps/hal_ll_pps_defines.h) dst(./include/hal_ll_port/hal_ll_pps_defines.h)
    src(../../include/pps/hal_ll_pps_connection_defs/<[pps_connections_path]>/hal_ll_pps_connection_defs.h) dst(./include/hal_ll_port/hal_ll_pps_connection_defs.h)
}

alias: MikroSDK.HalLowLevel.PPS

type: library
target: lib_hal_ll_core

#begin python
hal_ll_core_def_list = []
if "PIC18" in MEMAKE_MCU_NAME:
    hal_ll_core_source = "hal_ll_core.c"
    hal_ll_core_def_list.append("__pic18__")
    if "PIC18LF" in MEMAKE_MCU_NAME:
        hal_ll_core_def_list.append(MEMAKE_MCU_NAME[:6]  + "xx")
    else:
        hal_ll_core_def_list.append(MEMAKE_MCU_NAME[:5]  + "xx")
else:    ## TODO Only PIC18 MCUs supported at the moment.
    hal_ll_core_def_list.append(MEMAKE_MCU_NAME[:5]  + "xx")
    hal_ll_core_source = "pic_not_supported.c"
    hal_ll_core_def_list.append("__family_not_supported__")

## K42 and Q43 have different assembly instructions
if MEMAKE_MCU_NAME[-3:] == "K42" or MEMAKE_MCU_NAME[-3:] == "Q43":
    hal_ll_core_def_list.append("__hal_ll_core_subimplementation_1__")
else:
    hal_ll_core_def_list.append("__hal_ll_core_subimplementation_2__")
#end python

defines: {
    <['\r\n'.join(hal_ll_core_def_list)]>
}

depends: {
    MikroSDK.HalLowLevelCommon
}

sources: {
    ./src/<[hal_ll_core_source]>
}

headers: {
    ./include/hal_ll_core_defines.h
    ./include/hal_ll_core_port.h
    ./include/hal_ll_core.h
}

include: {
    ./include
}

expInclude: {
    ./include
}

alias: MikroSDK.HalLowLevelCore

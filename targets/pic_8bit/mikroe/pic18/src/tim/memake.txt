type: library
target: lib_hal_ll_tim

#begin python  # pic specific
import re

hal_ll_def_list = []
if "PIC18" in MEMAKE_MCU_NAME:
    hal_ll_def_list.append("__pic18__")
else:
    hal_ll_def_list.append("__family_not_supported__")

hal_ll_def_list.append(MEMAKE_MCU_NAME)

## BEGIN TIM
hal_ll_def_list.append("MACRO_USAGE_TIM")

if MEMAKE_MCU_NAME[-3:] == "K42" or MEMAKE_MCU_NAME[-3:] == "K40" or MEMAKE_MCU_NAME[-3:] == "Q43" or MEMAKE_MCU_NAME[-3:] == "Q10":
    tim_implementation = "implementation_2"
else:
    tim_implementation = "implementation_1"

## TIM Enhanced PWM implementations.
if (re.match("(^PIC18L?F[68][567]K(22|80|90)$)|(^PIC18F[68][567][J]94$)|(^PIC18L?F[249][4567][JK](11|13|22|50|53|80|94)$)", MEMAKE_MCU_NAME)):
    hal_ll_def_list.append("PSTRXCON_REG_AVAILABLE")
elif ( re.match("(^PIC18L?F[468][4567](10|15|20|21|22|23|25|27|28|50|53|55|58|80|82|85)$)|(^PIC18F[689][567]J(10|11|15|16|50|55|60|65)$)", MEMAKE_MCU_NAME)):
    hal_ll_def_list.append("PSTRXCON_REG_NOT_AVAILABLE")
## EOF TIM Enhanced PWM implementations.
## END TIM
#end python

defines: {
    <['\r\n'.join(hal_ll_def_list)]>
}

depends: {
    MikroC.Core
    MikroSDK.HalLowLevel.PPS
    MikroSDK.HalLowLevelCore
    MikroSDK.HalLowLevelCommon
}

sources: {
::  BEGIN TIM
    ./<[tim_implementation]>/hal_ll_tim.c
::  END TIM
}

headers: {
    ../../include/hal_ll_target.h
    ../../include/hal_ll_slrcon_map.h
    ../../include/hal_ll_odcon_map.h
::  BEGIN TIM
    ../../include/tim/hal_ll_tim.h
::  END TIM
}

include: {
    ../../include
::  BEGIN TIM
    ../../include/tim
::  END TIM
}

expInclude: {
    ./include/<[MEMAKE_MCU_NAME.lower()]>
    ./include/hal_ll_port
}

install: {
    src(../../include/tim/hal_ll_tim.h) dst(./include/hal_ll_port/hal_ll_tim.h)
    src(../../include/tim/hal_ll_tim_pin_map.h) dst(./include/hal_ll_port/hal_ll_tim_pin_map.h)
}

alias: MikroSDK.HalLowLevel.TIM

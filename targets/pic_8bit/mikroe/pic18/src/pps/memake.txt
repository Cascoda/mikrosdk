type: library
target: lib_hal_ll_pps

#begin python  # pic specific
import re

hal_ll_def_list = []
if "PIC18" in MEMAKE_MCU_NAME:
    hal_ll_def_list.append("__pic18__")
else:
    hal_ll_def_list.append("__family_not_supported__")

hal_ll_def_list.append(MEMAKE_MCU_NAME)

## BEGIN PPS
hal_ll_def_list.append("MACRO_USAGE_PPS")

check_pps_regex = re.match("(^PIC18(.+)[24](.+)J1[13]$)|(^PIC18(.+)[24](.+)J5[03]$)|(^PIC18(.+)J94$)|(^PIC18(.+)K4[02]$)|(^PIC18(.+)Q43$)|(^PIC18(.+)Q10$)",MEMAKE_MCU_NAME)

check_pps_in_out = re.match("(^PIC18(.+)K4[0]$)|(^PIC18(.+)Q10$)",MEMAKE_MCU_NAME)

if check_pps_regex:
    if MEMAKE_MCU_NAME[-3:] == "J94":
        hal_ll_def_list.append("__hal_ll_pps_lock_unlock_case_1__")
    elif MEMAKE_MCU_NAME[-3:] == "K40" or MEMAKE_MCU_NAME[-3:] == "K42" or MEMAKE_MCU_NAME[-3:] == "Q43" or MEMAKE_MCU_NAME[-3:] == "Q10":
        hal_ll_def_list.append("__hal_ll_pps_lock_unlock_case_2__")
    else:
        hal_ll_def_list.append("__hal_ll_pps_lock_unlock_case_3__")

    pps_connections_path = MEMAKE_MCU_NAME
else:
    hal_ll_def_list.append("__hal_ll_pps_lock_unlock_case_4__")
    pps_connections_path = "HAL_LL_PPS_DEFAULT"

if check_pps_in_out:
    if MEMAKE_MCU_NAME[-3:] == "Q10":
        hal_ll_def_list.append("__hal_ll_pps_i2c_in_out__")
        hal_ll_def_list.append("__hal_ll_pps_spi_in_out__")
    elif MEMAKE_MCU_NAME[-3:] == "K40":
        hal_ll_def_list.append("__hal_ll_pps_i2c_in_out__")

pps_implementation = "implementation_1"
## END PPS
#end python

defines: {
    <['\r\n'.join(hal_ll_def_list)]>
}

depends: {
    MikroC.Core
    MikroSDK.HalLowLevelCore
    MikroSDK.HalLowLevelCommon
}

sources: {
::  BEGIN PPS
    ./hal_ll_pps.c
    ./<[pps_implementation]>/hal_ll_pps_port.c
::  END PPS
}

headers: {
    ../../include/hal_ll_target.h
    ../../include/hal_ll_slrcon_map.h
    ../../include/hal_ll_odcon_map.h
::  BEGIN PPS
    ../../include/pps/hal_ll_pps.h
    ../../include/pps/hal_ll_pps_port.h
    ../../include/pps/hal_ll_pps_defines.h
    ../../include/pps/hal_ll_pps_connection_defs/<[pps_connections_path]>/hal_ll_pps_connection_defs.h
::  END PPS
}

include: {
    ../../include
    ../../include/gpio
::  BEGIN PPS
    ../../include/pps
    ../../include/pps/hal_ll_pps_connection_defs
    ../../include/pps/hal_ll_pps_connection_defs/<[pps_connections_path]>
::  END PPS
}

expInclude: {
    ./include/<[MEMAKE_MCU_NAME.lower()]>
    ./include/hal_ll_port
}

install: {
    src(../../include/pps/hal_ll_pps.h) dst(./include/hal_ll_port/hal_ll_pps.h)
    src(../../include/pps/hal_ll_pps_port.h) dst(./include/hal_ll_port/hal_ll_pps_port.h)
    src(../../include/pps/hal_ll_pps_defines.h) dst(./include/hal_ll_port/hal_ll_pps_defines.h)
}

alias: MikroSDK.HalLowLevel.PPS

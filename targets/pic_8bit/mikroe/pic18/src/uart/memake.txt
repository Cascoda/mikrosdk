type: library
target: lib_hal_ll_uart

#begin python  # pic specific
import re

hal_ll_def_list = []
if "PIC18" in MEMAKE_MCU_NAME:
    hal_ll_def_list.append("__pic18__")
else:
    hal_ll_def_list.append("__family_not_supported__")

hal_ll_def_list.append(MEMAKE_MCU_NAME)

## BEGIN UART
if MEMAKE_MCU_NAME[-3:] == "K42" or MEMAKE_MCU_NAME[-3:] == "Q43":
    uart_implementation = "implementation_2"
else:
    uart_implementation = "implementation_1"

check_uart_specific_baud_chip = re.match("(^PIC18F(([68]5J11$)|([68]5J90$)|([68]6J[79][023]$)|([68]7J[9][03]$)|(87J72$)))",MEMAKE_MCU_NAME)
check_uart_no_16bit_timer_chip = re.match("(^PIC18(.+)[68][567]20$)",MEMAKE_MCU_NAME)

if check_uart_specific_baud_chip:
    hal_ll_def_list.append("__hal_ll_uart_baud_specific__")
if check_uart_no_16bit_timer_chip:
    hal_ll_def_list.append("__hal_ll_uart_no_16bit_timer__")
## END UART
#end python

defines: {
    <['\r\n'.join(hal_ll_def_list)]>
}

depends: {
    MikroC.Core
    MikroSDK.HalLowLevel.PPS
    MikroSDK.HalLowLevelCore
    MikroSDK.HalLowLevelCommon
}

sources: {
::  BEGIN UART
    ./<[uart_implementation]>/hal_ll_uart.c
::  END UART
}

headers: {
    ../../include/hal_ll_target.h
    ../../include/hal_ll_slrcon_map.h
    ../../include/hal_ll_odcon_map.h
::  BEGIN UART
    ../../include/uart/hal_ll_uart.h
    ../../include/uart/hal_ll_uart_pin_map.h
::  END UART
}

include: {
    ../../include
::  BEGIN UART
    ../../include/uart
::  END UART
}

expInclude: {
    ./include/<[MEMAKE_MCU_NAME.lower()]>
    ./include/hal_ll_port
}

install: {
    src(../../include/uart/hal_ll_uart.h) dst(./include/hal_ll_port/hal_ll_uart.h)
    src(../../include/uart/hal_ll_uart_pin_map.h) dst(./include/hal_ll_port/hal_ll_uart_pin_map.h)
}

alias: MikroSDK.HalLowLevel.UART

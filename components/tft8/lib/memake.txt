type: library
target: lib_tft8

#begin python
import re

tft8_def_list = []
if re.match("^MIKROMEDIA3(.+)$",BOARD_NAME):
    tft8_def_list.append("__8_bit_interface__")
elif re.match("^MIKROMEDIA[45](.+)$",BOARD_NAME):
    if (re.match("^(.+)PIC32MZ(.+)$",BOARD_NAME)):
        tft8_def_list.append("__8_bit_interface__")
    else:
        tft8_def_list.append("__16_bit_interface__")
elif re.match("^MIKROMEDIA(PLUS|7FOR)(.+)$",BOARD_NAME):
    if (re.match("^(.+)PIC32MX(.+)$",BOARD_NAME)):
        tft8_def_list.append("__8_bit_interface__")
    else:
        tft8_def_list.append("__16_bit_interface__")
elif re.match("(^MCU_CARD_(.+)_STM32$)",MCU_CARD_NAME):
    if re.match("(^MCU_CARD_FOR_STM32$)|(^MCU_CARD_((4)|(([1][123457])|([2][02345678])|([3][12])))_FOR_STM32$)",MCU_CARD_NAME):
        tft8_def_list.append("__16_bit_interface__")
    else:
        tft8_def_list.append("__8_bit_interface__")
elif re.match("(^MCU_CARD_(.+)_PIC$)",MCU_CARD_NAME):
    if re.match("(^MCU_CARD_(([247])|(10))_FOR_PIC$)",MCU_CARD_NAME):
        tft8_def_list.append("__8_bit_interface__")
    else:
        tft8_def_list.append("__16_bit_interface__")
elif re.match("(^MCU_CARD_(.+)_PIC32$)",MCU_CARD_NAME):
    if re.match("(^MCU_CARD_FOR_PIC32$)|(^MCU_CARD_3_FOR_PIC32$)",MCU_CARD_NAME):
        tft8_def_list.append("__8_bit_interface__")
    else:
        tft8_def_list.append("__16_bit_interface__")
elif re.match("(^MCU_CARD_(.+)_KINETIS$)",MCU_CARD_NAME):
    if re.match("(^MCU_CARD_5_FOR_KINETIS$)",MCU_CARD_NAME):
        tft8_def_list.append("__8_bit_interface__")
    else:
        tft8_def_list.append("__16_bit_interface__")
elif re.match("(^MCU_CARD_(.+)TIVA$)",MCU_CARD_NAME):
    tft8_def_list.append("__16_bit_interface__")
else:
    tft8_def_list.append("__16_bit_interface__")  ## by default select 16-bit port

if "__16_bit_interface__" in tft8_def_list:
    tft_pin_map_routine = "TFT8_MAP_PINOUTS_16BIT"
elif "__8_bit_interface__" in tft8_def_list:
    tft_pin_map_routine = "TFT8_MAP_PINOUTS_8BIT"
else:
    tft_pin_map_routine = "TFT8_MAP_PINOUTS_NOT_DEFINED"

try:
    MSDK_TFT_TYPE
except NameError:
    tft8_def_list.append("__tft_not_selected__")
else:
    if ( MSDK_TFT_TYPE == "__TFT_RESISTIVE__" ):
        tft8_def_list.append("__resistive__")
    elif ( MSDK_TFT_TYPE == "__TFT_CAPACITIVE__" ):
        tft8_def_list.append("__capacitive__")
#end python

defines: {
    <['\r\n'.join(tft8_def_list)]>
    TFT8_MAP_PINOUTS=<[tft_pin_map_routine]>
}

sources: {
    ./src/tft8.c
}

headers: {
    ./include/tft8.h
}

depends: {
    MikroC.Core
    MikroSDK.Driver.GPIO.Out
    MikroSDK.Driver.GPIO.Port
    MikroSDK.Ssd1963
    MikroSDK.GraphicLibrary
}

include: {
    ./include
}

expInclude: {
    ./include/components/tft8
}

install: {
    src(./include/tft8.h) dst(./include/components/tft8/tft8.h)
}

alias: Components.TftBoard8

type: subdirs
project: tests_click_boards_adc

#begin python
import re

click_pic18_regex = "|(^PIC18F2455$|^PIC18F2458$|^PIC18F24J11$|^PIC18F24J50$|^PIC18F24K50$|^PIC18F2515$|^PIC18F2525$|^PIC18F2550$|^PIC18F2553$|^PIC18F2585$|^PIC18F25J11$|^PIC18F25J50$|^PIC18F25K40$|^PIC18F25K42$|^PIC18F25K50$|^PIC18F25K80$|^PIC18F2680$|^PIC18F2682$|^PIC18F2685$|^PIC18F26J11$|^PIC18F26J13$|^PIC18F26J50$|^PIC18F26J53$|^PIC18F26K40$|^PIC18F26K42$|^PIC18F4455$|^PIC18F4458$|^PIC18F44J11$|^PIC18F44J50$|^PIC18F4515$|^PIC18F4525$|^PIC18F4550$|^PIC18F4553$|^PIC18F4585$|^PIC18F45J11$|^PIC18F45J50$|^PIC18F45K22$|^PIC18F45K40$|^PIC18F45K42$|^PIC18F45K50$|^PIC18F45K80$|^PIC18F4680$|^PIC18F4682$|^PIC18F4685$|^PIC18F46J11$|^PIC18F46J13$|^PIC18F46J50$|^PIC18F46J53$|^PIC18F46K40$|^PIC18F46K42$|^PIC18F47Q10$|^PIC18F55K42$|^PIC18F56K42$|^PIC18F6520$|^PIC18F6525$|^PIC18F6527$|^PIC18F6585$|^PIC18F65J10$|^PIC18F65J11$|^PIC18F65J15$|^PIC18F65J50$|^PIC18F65J90$|^PIC18F65J94$|^PIC18F65K22$|^PIC18F65K40$|^PIC18F65K80$|^PIC18F65K90$|^PIC18F6680$|^PIC18F66J10$|^PIC18F66J94$|^PIC18F66K40$|^PIC18F67K40$|^PIC18F8520$|^PIC18F8525$|^PIC18F8527$|^PIC18F8585$|^PIC18F85J10$|^PIC18F85J11$|^PIC18F85J15$|^PIC18F85J50$|^PIC18F85J90$|^PIC18F85J94$|^PIC18F85K22$|^PIC18F85K90$|^PIC18F8680$|^PIC18F86J10$|^PIC18F86J94$|^PIC18F95J94$|^PIC18F96J94$|^PIC18LF2455$|^PIC18LF2458$|^PIC18LF24J11$|^PIC18LF24J50$|^PIC18LF24K50$|^PIC18LF2515$|^PIC18LF2525$|^PIC18LF2550$|^PIC18LF2553$|^PIC18LF2585$|^PIC18LF25J11$|^PIC18LF25J50$|^PIC18LF25K40$|^PIC18LF25K42$|^PIC18LF25K50$|^PIC18LF25K80$|^PIC18LF2680$|^PIC18LF2682$|^PIC18LF2685$|^PIC18LF26J11$|^PIC18LF26J13$|^PIC18LF26J50$|^PIC18LF26J53$|^PIC18LF26K40$|^PIC18LF26K42$|^PIC18LF4455$|^PIC18LF4458$|^PIC18LF44J11$|^PIC18LF44J50$|^PIC18LF4515$|^PIC18LF4525$|^PIC18LF4550$|^PIC18LF4553$|^PIC18LF4585$|^PIC18LF45J11$|^PIC18LF45J50$|^PIC18LF45K22$|^PIC18LF45K40$|^PIC18LF45K42$|^PIC18LF45K50$|^PIC18LF45K80$|^PIC18LF4680$|^PIC18LF4682$|^PIC18LF4685$|^PIC18LF46J11$|^PIC18LF46J13$|^PIC18LF46J50$|^PIC18LF46J53$|^PIC18LF46K40$|^PIC18LF46K42$|^PIC18LF55K42$|^PIC18LF56K42$|^PIC18LF6520$|^PIC18LF6527$|^PIC18LF65K40$|^PIC18LF65K80$|^PIC18LF66K40$|^PIC18LF67K40$|^PIC18LF8520$|^PIC18LF8527$|^PIC18LF8720$)"

## ambient 7 click memory regex definitions by chip core
click_ambient_7_regex_stm32_m0 = "(^STM32(([FGL]0(.+)[346])|(L072VZ)|(L073[RC][BZ])|(L073V[8BZ])|(L081[CK]Z))$)"
click_ambient_7_regex_stm32_m3 = "|(^STM32F10[0-3](.+)$)"
click_ambient_7_regex_stm32_m4 = "|(^STM32F(.+)[46]$)"
click_ambient_7_regex_stm32_m7 = "|(^ALL$)" ## All chips have enough memory

click_ambient_7_regex = click_ambient_7_regex_stm32_m0 + click_ambient_7_regex_stm32_m3 + click_ambient_7_regex_stm32_m4 + click_ambient_7_regex_stm32_m7 + click_pic18_regex
## EOF ambient 7 click memory regex definitions by chip core

## force click memory regex definitions by chip core
click_force_regex_stm32_m0 = "(^STM32(([FGL]0(.+)[346])|(L072VZ)|(L073[RC][BZ])|(L073V[8BZ])|(L081[CK]Z))$)"
click_force_regex_stm32_m3 = "|(^STM32F10[0-3](.+)$)"
click_force_regex_stm32_m4 = "|(^STM32F(.+)[46]$)"
click_force_regex_stm32_m7 = "|(^ALL$)" ## All chips have enough memory

click_force_regex = click_force_regex_stm32_m0 + click_force_regex_stm32_m3 + click_force_regex_stm32_m4 + click_force_regex_stm32_m7 + click_pic18_regex
## EOF force click memory regex definitions by chip core

## hall current 5 click memory regex definitions by chip core
click_hall_current_5_regex_stm32_m0 = "(^STM32(([FGL]0(.+)[346])|(L072VZ)|(L073[RC][BZ])|(L073V[8BZ])|(L081[CK]Z))$)"
click_hall_current_5_regex_stm32_m3 = "|(^STM32F10[0-3](.+)$)"
click_hall_current_5_regex_stm32_m4 = "|(^STM32F(.+)[46]$)"
click_hall_current_5_regex_stm32_m7 = "|(^ALL$)" ## All chips have enough memory

click_hall_current_5_regex = click_hall_current_5_regex_stm32_m0 + click_hall_current_5_regex_stm32_m3 + click_hall_current_5_regex_stm32_m4 + click_hall_current_5_regex_stm32_m7 + click_pic18_regex
## EOF hall current 5 click memory regex definitions by chip core

## pressure 12 click memory regex definitions by chip core
click_pressure_12_regex_stm32_m0 = "(^STM32(([FGL]0(.+)[346])|(L072VZ)|(L073[RC][BZ])|(L073V[8BZ])|(L081[CK]Z))$)"
click_pressure_12_regex_stm32_m3 = "|(^STM32F10[0-3](.+)$)"
click_pressure_12_regex_stm32_m4 = "|(^STM32F(.+)[46]$)"
click_pressure_12_regex_stm32_m7 = "|(^ALL$)" ## All chips have enough memory

click_pressure_12_regex = click_pressure_12_regex_stm32_m0 + click_pressure_12_regex_stm32_m3 + click_pressure_12_regex_stm32_m4 + click_pressure_12_regex_stm32_m7 + click_pic18_regex
## EOF pressure 12 click memory regex definitions by chip core

## slider 2 click memory regex definitions by chip core
click_slider_2_regex_stm32_m0 = "(^STM32(([FGL]0(.+)[346])|(L072VZ)|(L073[RC][BZ])|(L073V[8BZ])|(L081[CK]Z))$)"
click_slider_2_regex_stm32_m3 = "|(^STM32F10[0-3](.+)$)"
click_slider_2_regex_stm32_m4 = "|(^STM32F(.+)[46]$)"
click_slider_2_regex_stm32_m7 = "|(^ALL$)" ## All chips have enough memory

click_slider_2_regex = click_slider_2_regex_stm32_m0 + click_slider_2_regex_stm32_m3 + click_slider_2_regex_stm32_m4 + click_slider_2_regex_stm32_m7 + click_pic18_regex
## EOF slider 2 memory regex definitions by chip core

if re.match(click_ambient_7_regex,MEMAKE_MCU_NAME):
    memory_issue_click_ambient_7 = True
else:
    memory_issue_click_ambient_7 = False

if re.match(click_force_regex,MEMAKE_MCU_NAME):
    memory_issue_click_force = True
else:
    memory_issue_click_force = False

if re.match(click_hall_current_5_regex,MEMAKE_MCU_NAME):
    memory_issue_click_hall_current_5 = True
else:
    memory_issue_click_hall_current_5 = False

if re.match(click_pressure_12_regex,MEMAKE_MCU_NAME):
    memory_issue_click_pressure_12 = True
else:
    memory_issue_click_pressure_12 = False

if re.match(click_slider_2_regex,MEMAKE_MCU_NAME):
    memory_issue_click_slider_2 = True
else:
    memory_issue_click_slider_2 = False

## CUSTOM EXAMPLES
if re.match("TODO","TODO"):
    memory_issue = True
else:
    memory_issue = False
## EOF CUSTOM EXAMPLES
#end python

subdirs: {
#if memory_issue_click_ambient_7 == False
    ./click_ambient_7
#else
    ./click_ambient_7/not_enough_memory
#endif
#if memory_issue_click_force == False
    ./click_force
#else
    ./click_force/not_enough_memory
#endif
#if memory_issue_click_hall_current_5 == False
    ./click_hall_current_5
#else
    ./click_hall_current_5/not_enough_memory
#endif
#if memory_issue_click_pressure_12 == False
    ./click_pressure_12
#else
    ./click_pressure_12/not_enough_memory
#endif
#if memory_issue_click_slider_2 == False
    ./click_slider_2
#else
    ./click_slider_2/not_enough_memory
#endif
#if memory_issue == False
::  TODO if any issues with custom examples
#endif
}

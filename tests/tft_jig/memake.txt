type: executable
target: test_tft_jig

#begin python
import re
tft_list = []

if re.match("(^BOARD(.+)(FUSION|PRO)(.+)V8$)|(^MIKROMEDIA(.+)$)",BOARD_NAME):
    tft_list.append("__SSD1963__")
elif re.match("(^BOARD((_EASYPIC_V8)|((.+)V7)|((.+)_V7_(.+)))$)",BOARD_NAME):
    tft_list.append("__ILI9341__")
else:
    tft_list.append("__TFT_NOT_SUPPORTED__")

if re.match("MIKROMEDIA3(.+)",BOARD_NAME):
    tft_list.append("__8_bit_interface__")
elif re.match("MIKROMEDIA[45](.+)",BOARD_NAME):
    tft_list.append("__16_bit_interface__")
elif re.match("(^MCU_CARD_(.+)_STM32$)",MCU_CARD_NAME):
    if re.match("(^MCU_CARD_FOR_STM32$)|(^MCU_CARD_((4)|(([1][123457])|([2][02345678])|([3][12])))_FOR_STM32$)",MCU_CARD_NAME):
        tft_list.append("__16_bit_interface__")
    else:
        tft_list.append("__8_bit_interface__")
elif re.match("(^MCU_CARD_(.+)_PIC$)",MCU_CARD_NAME):
    if re.match("(^MCU_CARD_(([247])|(10))_FOR_PIC$)",MCU_CARD_NAME):
        tft_list.append("__8_bit_interface__")
    else:
        tft_list.append("__16_bit_interface__")
elif re.match("(^MCU_CARD_(.+)_PIC32$)",MCU_CARD_NAME):
    if re.match("(^MCU_CARD_FOR_PIC32$)",MCU_CARD_NAME):
        tft_list.append("__8_bit_interface__")
    else:
        tft_list.append("__16_bit_interface__")
else:
    tft_list.append("__8_bit_interface__")  ## by default select 8-bit port
## TODO -- add 24-bit
#end python

defines: {
    <['\r\n'.join(tft_list)]>
}

sources: {
    ./src/main.c
}

headers: {
    ./inc/tft_defines.h
    inc/tft_connections.h
}

include: {
    ./inc
}

others: {
    ./ReadMe.txt
}

depends: {
    MikroC.Core
    MikroSDK.Driver.GPIO.Out
    MikroSDK.Board
}
